name: run_share_tests

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  checks: write

jobs:

  run_tests:
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.11']  # TODO: 3.12
        postgres-version: ['10', '11', '12', '13', '14', '15']
    runs-on: ubuntu-latest
    container: python:${{ matrix.python-version }}-slim
    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      elasticsearch8:
        image: elasticsearch:8.7.0
        env:
          xpack.security.enabled: false
          node.name: singlenode
          cluster.initial_master_nodes: singlenode
      elasticsearch5:
        image: elasticsearch:5.4
        env:
          ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      rabbitmq:
        image: rabbitmq:management
    steps:
      - uses: actions/checkout@v3

      - name: install non-py dependencies
        run: apt-get update && apt-get install -y libxml2-dev libxslt1-dev libpq-dev git gcc

      - name: install py dependencies  # TODO: cache
        run: pip install -r dev-requirements.txt

      - name: install share
        run: python setup.py develop

      - name: flake it
        run: flake8 .

      - name: run tests
        run: |
          coverage run -m pytest -x --create-db
          coverage run --append -m behave
        env:
          DATABASE_HOST: postgres
          DATABASE_PASSWORD: postgres
          ELASTICSEARCH8_URL: http://elasticsearch8:9200/
          ELASTICSEARCH5_URL: http://elasticsearch5:9200/
          RABBITMQ_HOST: rabbitmq

      - name: send coverage report
        run: coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
