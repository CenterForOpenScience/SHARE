@prefix rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns#
@prefix shacl: http://www.w3.org/ns/shacl#
@prefix trove: https://share.osf.io/trove/2023/

trove:Cardsearch a shacl:NodeShape, rdfs:Class ;
    rdfs:label "index-card search"@en ;
    rdfs:comment "primary data of a /index-card-search response"@en ;
    shacl:property [
        shacl:path trove:totalResultCount ;
        shacl:datatype xsd:integer ;
        shacl:or (
            [ shacl:datatype xsd:string ]
            [ shacl:in (trove:ten-thousands-and-more) ]
        ) ;
    ] ;
    shacl:property [
        shacl:path trove:cardsearchParams ;
        shacl:node trove:SearchParameters
    ] ;
    shacl:property [
        shacl:path trove:searchResultPage ;
        shacl:node trove:SearchResult ;
    ] ;
    shacl:property [
        shacl:path trove:relatedPropertysearch ;
        shacl:node trove:Propertysearch ;
    ] .

trove:Propertysearch a shacl:NodeShape, rdfs:Class ;
    rdfs:label "index-property search"@en ;
    rdfs:comment "primary data of a /index-property-search response"@en ;
    shacl:property [
        shacl:path trove:totalResultCount ;
        shacl:datatype xsd:integer ;
    ] ;
    shacl:property [
        shacl:path trove:propertySearchParams ;
        shacl:node trove:SearchParameters
    ] ;
    shacl:property [
        shacl:path trove:cardsearchParams ;
        shacl:node trove:SearchParameters
    ] ;
    shacl:property [
        shacl:path trove:searchResultPage ;
        shacl:node trove:SearchResult ;
    ] .

trove:Valuesearch a shacl:NodeShape, rdfs:Class ;
    rdfs:comment "primary data of a /index-value-search response"@en ;
    shacl:property [
        shacl:path trove:totalResultCount ;
        shacl:datatype xsd:integer ;
    ] ;
    shacl:property [
        shacl:path trove:valueSearchText ;
        shacl:or (
            [ shacl:datatype xsd:string ]
            [ shacl:datatype rdf:langString ]
        ) ;
    ] ;
    shacl:property [
        shacl:path trove:valueSearchFilter ;
        shacl:node trove:SearchFilter ;
    ] ;
    shacl:property [
        shacl:path trove:cardsearchText ;
        shacl:or (
            [ shacl:datatype xsd:string ]
            [ shacl:datatype rdf:langString ]
        ) ;
    ] ;
    shacl:property [
        shacl:path trove:cardsearchFilter ;
        shacl:node trove:SearchFilter ;
    ] ;
    shacl:property [
        shacl:path trove:searchResultPage ;
        shacl:node trove:SearchResult ;
    ] .

trove:SearchResult a shacl:NodeShape, rdfs:Class ;
    rdfs:comment "connects a search to an Card (with evidence of match)"@en ;
    shacl:property [
        shacl:path trove:indexCard ;
        shacl:node trove:Card ;
        shacl:minCount 1 ;
        shacl:maxCount 1 ;
    ] ;
    shacl:property [
        shacl:path trove:matchEvidence ;
        shacl:node shacl:or (trove:IriMatchEvidence trove:TextMatchEvidence) ;
        shacl:minCount 1 ;
    ] ;
    shacl:property [
        shacl:path trove:evidenceRecordSet ;
        shacl:node trove:Card ;
    ] ;
    shacl:property [
        shacl:path trove:cardCount ;
        shacl:datatype xsd:integer ;
    ] .

trove:Card a shacl:NodeShape, rdfs:Class ;
    shacl:property [
        shacl:path trove:resourceType ;
        shacl:nodeKind shacl:IRI ;
        shacl:minCount 1 ;
    ] ;
    shacl:property [
        shacl:path trove:resourceIdentifier ;
        shacl:datatype xsd:string ;
        shacl:minCount 1 ;
    ] ;
    shacl:property [
        shacl:path trove:resourceMetadata ;
        shacl:datatype shacl:IRI ;
        shacl:minCount 1 ;
        shacl:maxCount 1 ;
    ] ;
    shacl:or (
        [
            shacl:path (trove:resourceMetadata rdf:label) ;
            shacl:minCount 1 ;
        ],
        [
            shacl:path (trove:resourceMetadata dcterms:title) ;
            shacl:minCount 1 ;
        ],
        [
            shacl:path (trove:resourceMetadata foaf:name) ;
            shacl:minCount 1 ;
        ],
    ) .

trove:SearchFilter a shacl:NodeShape, rdfs:Class ;
    shacl:property trove:RequiredPropertyPathPropertyShape ;
    shacl:property [
        shacl:path trove:filterValue ;
        shacl:or (
            [ shacl:datatype xsd:string ]
            [ shacl:datatype rdf:langString ]
        ) ;
        shacl:minCount 1 ;
        shacl:maxCount 1 ;
    ] ;
    shacl:property [
        shacl:path trove:filterType ;
        shacl:in ('one-of' 'none-of' 'before' 'after') ;
    ] .

trove:IriMatchEvidence a shacl:NodeShape, rdfs:Class ;
    shacl:property trove:RequiredPropertyPathPropertyShape ;
    shacl:property [
        shacl:path trove:matchingIri ;
        shacl:nodeKind shacl:IRI ;
        shacl:minCount 1 ;
        shacl:maxCount 1 ;
    ] ;
    shacl:property [
        shacl:path trove:recordIri ;
        shacl:nodeKind shacl:IRI ;
    ] .

trove:TextMatchEvidence a shacl:NodeShape, rdfs:Class ;
    shacl:property trove:RequiredPropertyPathPropertyShape ;
    shacl:property [
        shacl:path trove:matchingHighlight ;
        shacl:or (
            [ shacl:datatype xsd:string ]
            [ shacl:datatype rdf:langString ]
        ) ;
        shacl:minCount 1 ;
        shacl:maxCount 1 ;
    ] ;
    shacl:property [
        shacl:path trove:card ;
        shacl:node trove:Card ;
    ] .

trove:RequiredPropertyPathPropertyShape a shacl:PropertyShape ;
    shacl:path trove:propertyPath ;
    shacl:or (
        [ shacl:node shacl:PredicatePath ]
        [ shacl:node shacl:SequencePath ]
    ) ;
    shacl:minCount 1 ;
    shacl:maxCount 1 .

trove:SearchParameters a shacl:NodeShape, rdfs:Class ;
    shacl:property [
        shacl:path trove:searchFilter ;
        shacl:node trove:SearchFilter ;
    ] ,
    shacl:property [
        shacl:path trove:searchText ;
        shacl:or (
            [ shacl:datatype xsd:string ]
            [ shacl:datatype rdf:langString ]
        ) ;
        shacl:minCount 1 ;
        shacl:maxCount 1 ;
    ] .
