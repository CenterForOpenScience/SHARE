# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-08 15:44
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import share.models.core
import share.models.fields
import share.models.validators
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='ShareUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=64, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.')], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=64, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=64, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('gravatar', models.URLField(blank=True)),
                ('time_zone', models.CharField(blank=True, max_length=100)),
                ('locale', models.CharField(blank=True, max_length=100)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('robot', models.CharField(blank=True, max_length=40)),
                ('long_title', models.CharField(blank=True, max_length=100)),
                ('home_page', models.URLField(blank=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Share users',
                'verbose_name': 'Share user',
            },
            managers=[
                ('objects', share.models.core.ShareUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AbstractCreativeWork',
            fields=[
                ('type', models.CharField(db_index=True, max_length=255)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('date_published', models.DateTimeField(null=True)),
                ('date_updated', models.DateTimeField(null=True)),
                ('free_to_read_type', models.URLField(blank=True)),
                ('free_to_read_date', models.DateTimeField(null=True)),
                ('rights', models.TextField(blank=True, null=True)),
                ('language', models.TextField(blank=True, null=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AbstractCreativeWorkVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(db_index=True, max_length=255)),
                ('action', models.CharField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('date_published', models.DateTimeField(null=True)),
                ('date_updated', models.DateTimeField(null=True)),
                ('free_to_read_type', models.URLField(blank=True)),
                ('free_to_read_date', models.DateTimeField(null=True)),
                ('rights', models.TextField(blank=True, null=True)),
                ('language', models.TextField(blank=True, null=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-date_modified',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Affiliation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AffiliationVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-date_modified',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Association',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssociationVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-date_modified',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('award', models.URLField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('url', models.URLField(blank=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AwardVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('award', models.URLField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('url', models.URLField(blank=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-date_modified',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CeleryTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(db_index=True, max_length=255)),
                ('uuid', models.UUIDField(db_index=True, unique=True)),
                ('name', models.TextField(blank=True)),
                ('args', models.TextField(blank=True)),
                ('kwargs', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.IntegerField(choices=[(0, 'started'), (1, 'retried'), (2, 'failed'), (3, 'succeeded')])),
                ('app_label', models.TextField(blank=True, db_index=True, null=True)),
                ('app_version', models.TextField(blank=True, null=True)),
                ('provider', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='provider', to=settings.AUTH_USER_MODEL)),
                ('started_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='started_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Change',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change', django.contrib.postgres.fields.jsonb.JSONField()),
                ('node_id', models.CharField(max_length=80)),
                ('type', models.IntegerField(choices=[(0, 'create'), (1, 'merge'), (2, 'update')], editable=False)),
                ('target_id', models.PositiveIntegerField(null=True)),
                ('target_version_id', models.PositiveIntegerField(null=True)),
            ],
            options={
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='ChangeSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(0, 'pending'), (1, 'accepted'), (2, 'rejected')], default=0)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contributor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cited_name', models.TextField(blank=True)),
                ('order_cited', models.PositiveIntegerField(null=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_contributor', to='share.Change')),
                ('creative_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWork')),
                ('creative_work_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWorkVersion')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContributorVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('cited_name', models.TextField(blank=True)),
                ('order_cited', models.PositiveIntegerField(null=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_contributorversion', to='share.Change')),
                ('creative_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWork')),
                ('creative_work_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWorkVersion')),
            ],
            options={
                'ordering': ('-date_modified',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_primary', models.BooleanField()),
                ('email', models.EmailField(max_length=254)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_email', to='share.Change')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmailVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('is_primary', models.BooleanField()),
                ('email', models.EmailField(max_length=254)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_emailversion', to='share.Change')),
            ],
            options={
                'ordering': ('-date_modified',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('type', models.CharField(db_index=True, max_length=255)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('url', models.URLField(blank=True)),
                ('name', models.CharField(max_length=255)),
                ('location', models.TextField(blank=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('funder_region', models.URLField(blank=True, null=True)),
                ('community_identifier', models.URLField(blank=True, null=True)),
                ('isni', models.URLField(blank=True, null=True)),
                ('ringgold', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Entities',
            },
        ),
        migrations.CreateModel(
            name='EntityVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(db_index=True, max_length=255)),
                ('action', models.CharField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('url', models.URLField(blank=True)),
                ('name', models.CharField(max_length=255)),
                ('location', models.TextField(blank=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('funder_region', models.URLField(blank=True, null=True)),
                ('community_identifier', models.URLField(blank=True, null=True)),
                ('isni', models.URLField(blank=True, null=True)),
                ('ringgold', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Entities',
            },
        ),
        migrations.CreateModel(
            name='ExtraData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', share.models.fields.DatetimeAwareJSONField(default=dict)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_extradata', to='share.Change')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ExtraData')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExtraDataVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('data', share.models.fields.DatetimeAwareJSONField(default=dict)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_extradataversion', to='share.Change')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ExtraData')),
                ('same_as_version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ExtraDataVersion')),
                ('sources', models.ManyToManyField(related_name='source_extradataversion', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Identifier',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('url', models.URLField()),
                ('base_url', models.URLField()),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_identifier', to='share.Change')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Identifier')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IdentifierVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('url', models.URLField()),
                ('base_url', models.URLField()),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_identifierversion', to='share.Change')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Identifier')),
                ('same_as_version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.IdentifierVersion')),
                ('sources', models.ManyToManyField(related_name='source_identifierversion', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date_modified',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('url', share.models.fields.URIField(max_length=200)),
                ('type', models.CharField(choices=[('doi', 'DOI'), ('provider', 'Provider'), ('misc', 'Miscellaneous')], max_length=50)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_link', to='share.Change')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Link')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LinkVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('url', share.models.fields.URIField(max_length=200)),
                ('type', models.CharField(choices=[('doi', 'DOI'), ('provider', 'Provider'), ('misc', 'Miscellaneous')], max_length=50)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_linkversion', to='share.Change')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Link')),
                ('same_as_version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.LinkVersion')),
                ('sources', models.ManyToManyField(related_name='source_linkversion', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date_modified',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NormalizedData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(null=True)),
                ('normalized_data', share.models.fields.DatetimeAwareJSONField(default={}, validators=[share.models.validators.is_valid_jsonld])),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('family_name', models.CharField(max_length=200)),
                ('given_name', models.CharField(max_length=200)),
                ('additional_name', models.CharField(blank=True, max_length=200)),
                ('suffix', models.CharField(blank=True, max_length=50)),
                ('location', models.TextField(blank=True)),
                ('url', models.URLField(blank=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('affiliation_versions', share.models.fields.TypedManyToManyField(through='share.Affiliation', to='share.EntityVersion')),
                ('affiliations', share.models.fields.TypedManyToManyField(through='share.Affiliation', to='share.Entity')),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_person', to='share.Change')),
            ],
            options={
                'verbose_name_plural': 'People',
            },
        ),
        migrations.CreateModel(
            name='PersonEmail',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_personemail', to='share.Change')),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Email')),
                ('email_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.EmailVersion')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonEmailVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_personemailversion', to='share.Change')),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Email')),
                ('email_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.EmailVersion')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Person')),
            ],
            options={
                'ordering': ('-date_modified',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('family_name', models.CharField(max_length=200)),
                ('given_name', models.CharField(max_length=200)),
                ('additional_name', models.CharField(blank=True, max_length=200)),
                ('suffix', models.CharField(blank=True, max_length=50)),
                ('location', models.TextField(blank=True)),
                ('url', models.URLField(blank=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('affiliation_versions', share.models.fields.TypedManyToManyField(through='share.Affiliation', to='share.EntityVersion')),
                ('affiliations', share.models.fields.TypedManyToManyField(through='share.Affiliation', to='share.Entity')),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_personversion', to='share.Change')),
                ('email_versions', share.models.fields.TypedManyToManyField(through='share.PersonEmail', to='share.EmailVersion')),
                ('emails', share.models.fields.TypedManyToManyField(through='share.PersonEmail', to='share.Email')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
            ],
            options={
                'verbose_name_plural': 'People',
            },
        ),
        migrations.CreateModel(
            name='RawData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('provider_doc_id', models.CharField(max_length=256)),
                ('data', models.TextField()),
                ('sha256', models.CharField(max_length=64)),
                ('date_seen', models.DateTimeField(auto_now=True)),
                ('date_harvested', models.DateTimeField(auto_now_add=True)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Raw data',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('url', models.URLField(blank=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_tag', to='share.Change')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TagVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=255)),
                ('url', models.URLField(blank=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_tagversion', to='share.Change')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Tag')),
                ('same_as_version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.TagVersion')),
                ('sources', models.ManyToManyField(related_name='source_tagversion', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date_modified',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThroughAwards',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('award', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Award')),
                ('award_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AwardVersion')),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_throughawards', to='share.Change')),
                ('creative_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWork')),
                ('creative_work_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWorkVersion')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughAwards')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThroughAwardsVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('award', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Award')),
                ('award_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AwardVersion')),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_throughawardsversion', to='share.Change')),
                ('creative_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWork')),
                ('creative_work_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWorkVersion')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughAwards')),
                ('same_as_version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughAwardsVersion')),
                ('sources', models.ManyToManyField(related_name='source_throughawardsversion', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date_modified',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThroughIdentifiers',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_throughidentifiers', to='share.Change')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('identifier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Identifier')),
                ('identifier_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.IdentifierVersion')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Person')),
                ('person_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.PersonVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughIdentifiers')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThroughIdentifiersVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_throughidentifiersversion', to='share.Change')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('identifier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Identifier')),
                ('identifier_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.IdentifierVersion')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Person')),
                ('person_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.PersonVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughIdentifiers')),
                ('same_as_version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughIdentifiersVersion')),
                ('sources', models.ManyToManyField(related_name='source_throughidentifiersversion', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date_modified',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThroughLinks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_throughlinks', to='share.Change')),
                ('creative_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWork')),
                ('creative_work_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWorkVersion')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('link', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Link')),
                ('link_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.LinkVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughLinks')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThroughLinksVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_throughlinksversion', to='share.Change')),
                ('creative_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWork')),
                ('creative_work_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWorkVersion')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('link', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Link')),
                ('link_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.LinkVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughLinks')),
                ('same_as_version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughLinksVersion')),
                ('sources', models.ManyToManyField(related_name='source_throughlinksversion', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date_modified',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThroughTags',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_throughtags', to='share.Change')),
                ('creative_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWork')),
                ('creative_work_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWorkVersion')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughTags')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThroughTagsVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_throughtagsversion', to='share.Change')),
                ('creative_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWork')),
                ('creative_work_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWorkVersion')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughTags')),
                ('same_as_version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughTagsVersion')),
                ('sources', models.ManyToManyField(related_name='source_throughtagsversion', to=settings.AUTH_USER_MODEL)),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Tag')),
                ('tag_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.TagVersion')),
            ],
            options={
                'ordering': ('-date_modified',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThroughVenues',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_throughvenues', to='share.Change')),
                ('creative_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWork')),
                ('creative_work_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWorkVersion')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughVenues')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThroughVenuesVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_throughvenuesversion', to='share.Change')),
                ('creative_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWork')),
                ('creative_work_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWorkVersion')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughVenues')),
                ('same_as_version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughVenuesVersion')),
                ('sources', models.ManyToManyField(related_name='source_throughvenuesversion', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date_modified',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('venue_type', models.URLField(blank=True)),
                ('location', models.URLField(blank=True)),
                ('community_identifier', models.URLField(blank=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_venue', to='share.Change')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Venue')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VenueVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=255)),
                ('venue_type', models.URLField(blank=True)),
                ('location', models.URLField(blank=True)),
                ('community_identifier', models.URLField(blank=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('change', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_venueversion', to='share.Change')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Venue')),
                ('same_as_version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.VenueVersion')),
                ('sources', models.ManyToManyField(related_name='source_venueversion', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date_modified',),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='venue',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.VenueVersion'),
        ),
        migrations.AddField(
            model_name='venue',
            name='sources',
            field=models.ManyToManyField(related_name='source_venue', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='venue',
            name='version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='share_venue_version', to='share.VenueVersion'),
        ),
        migrations.AddField(
            model_name='throughvenuesversion',
            name='venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Venue'),
        ),
        migrations.AddField(
            model_name='throughvenuesversion',
            name='venue_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.VenueVersion'),
        ),
        migrations.AddField(
            model_name='throughvenues',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughVenuesVersion'),
        ),
        migrations.AddField(
            model_name='throughvenues',
            name='sources',
            field=models.ManyToManyField(related_name='source_throughvenues', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='throughvenues',
            name='venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Venue'),
        ),
        migrations.AddField(
            model_name='throughvenues',
            name='venue_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.VenueVersion'),
        ),
        migrations.AddField(
            model_name='throughvenues',
            name='version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='share_throughvenues_version', to='share.ThroughVenuesVersion'),
        ),
        migrations.AddField(
            model_name='throughtags',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughTagsVersion'),
        ),
        migrations.AddField(
            model_name='throughtags',
            name='sources',
            field=models.ManyToManyField(related_name='source_throughtags', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='throughtags',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Tag'),
        ),
        migrations.AddField(
            model_name='throughtags',
            name='tag_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.TagVersion'),
        ),
        migrations.AddField(
            model_name='throughtags',
            name='version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='share_throughtags_version', to='share.ThroughTagsVersion'),
        ),
        migrations.AddField(
            model_name='throughlinks',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughLinksVersion'),
        ),
        migrations.AddField(
            model_name='throughlinks',
            name='sources',
            field=models.ManyToManyField(related_name='source_throughlinks', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='throughlinks',
            name='version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='share_throughlinks_version', to='share.ThroughLinksVersion'),
        ),
        migrations.AddField(
            model_name='throughidentifiers',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughIdentifiersVersion'),
        ),
        migrations.AddField(
            model_name='throughidentifiers',
            name='sources',
            field=models.ManyToManyField(related_name='source_throughidentifiers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='throughidentifiers',
            name='version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='share_throughidentifiers_version', to='share.ThroughIdentifiersVersion'),
        ),
        migrations.AddField(
            model_name='throughawards',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughAwardsVersion'),
        ),
        migrations.AddField(
            model_name='throughawards',
            name='sources',
            field=models.ManyToManyField(related_name='source_throughawards', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='throughawards',
            name='version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='share_throughawards_version', to='share.ThroughAwardsVersion'),
        ),
        migrations.AddField(
            model_name='tag',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.TagVersion'),
        ),
        migrations.AddField(
            model_name='tag',
            name='sources',
            field=models.ManyToManyField(related_name='source_tag', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tag',
            name='version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='share_tag_version', to='share.TagVersion'),
        ),
        migrations.AddField(
            model_name='personversion',
            name='identifier_versions',
            field=share.models.fields.TypedManyToManyField(through='share.ThroughIdentifiers', to='share.IdentifierVersion'),
        ),
        migrations.AddField(
            model_name='personversion',
            name='identifiers',
            field=share.models.fields.TypedManyToManyField(through='share.ThroughIdentifiers', to='share.Identifier'),
        ),
        migrations.AddField(
            model_name='personversion',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Person'),
        ),
        migrations.AddField(
            model_name='personversion',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.PersonVersion'),
        ),
        migrations.AddField(
            model_name='personversion',
            name='sources',
            field=models.ManyToManyField(related_name='source_personversion', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='personemailversion',
            name='person_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.PersonVersion'),
        ),
        migrations.AddField(
            model_name='personemailversion',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.PersonEmail'),
        ),
        migrations.AddField(
            model_name='personemailversion',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.PersonEmailVersion'),
        ),
        migrations.AddField(
            model_name='personemailversion',
            name='sources',
            field=models.ManyToManyField(related_name='source_personemailversion', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='personemail',
            name='person_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.PersonVersion'),
        ),
        migrations.AddField(
            model_name='personemail',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.PersonEmail'),
        ),
        migrations.AddField(
            model_name='personemail',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.PersonEmailVersion'),
        ),
        migrations.AddField(
            model_name='personemail',
            name='sources',
            field=models.ManyToManyField(related_name='source_personemail', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='personemail',
            name='version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='share_personemail_version', to='share.PersonEmailVersion'),
        ),
        migrations.AddField(
            model_name='person',
            name='email_versions',
            field=share.models.fields.TypedManyToManyField(through='share.PersonEmail', to='share.EmailVersion'),
        ),
        migrations.AddField(
            model_name='person',
            name='emails',
            field=share.models.fields.TypedManyToManyField(through='share.PersonEmail', to='share.Email'),
        ),
        migrations.AddField(
            model_name='person',
            name='extra',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='person',
            name='extra_version',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='person',
            name='identifier_versions',
            field=share.models.fields.TypedManyToManyField(through='share.ThroughIdentifiers', to='share.IdentifierVersion'),
        ),
        migrations.AddField(
            model_name='person',
            name='identifiers',
            field=share.models.fields.TypedManyToManyField(through='share.ThroughIdentifiers', to='share.Identifier'),
        ),
        migrations.AddField(
            model_name='person',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Person'),
        ),
        migrations.AddField(
            model_name='person',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.PersonVersion'),
        ),
        migrations.AddField(
            model_name='person',
            name='sources',
            field=models.ManyToManyField(related_name='source_person', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='person',
            name='version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='share_person_version', to='share.PersonVersion'),
        ),
        migrations.AddField(
            model_name='normalizeddata',
            name='raw',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.RawData'),
        ),
        migrations.AddField(
            model_name='normalizeddata',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='link',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.LinkVersion'),
        ),
        migrations.AddField(
            model_name='link',
            name='sources',
            field=models.ManyToManyField(related_name='source_link', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='link',
            name='version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='share_link_version', to='share.LinkVersion'),
        ),
        migrations.AddField(
            model_name='identifier',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.IdentifierVersion'),
        ),
        migrations.AddField(
            model_name='identifier',
            name='sources',
            field=models.ManyToManyField(related_name='source_identifier', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='identifier',
            name='version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='share_identifier_version', to='share.IdentifierVersion'),
        ),
        migrations.AddField(
            model_name='extradata',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='extradata',
            name='sources',
            field=models.ManyToManyField(related_name='source_extradata', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='extradata',
            name='version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='share_extradata_version', to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='entityversion',
            name='affiliation_versions',
            field=share.models.fields.TypedManyToManyField(through='share.Affiliation', to='share.PersonVersion'),
        ),
        migrations.AddField(
            model_name='entityversion',
            name='affiliations',
            field=share.models.fields.TypedManyToManyField(through='share.Affiliation', to='share.Person'),
        ),
        migrations.AddField(
            model_name='entityversion',
            name='change',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_entityversion', to='share.Change'),
        ),
        migrations.AddField(
            model_name='entityversion',
            name='extra',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='entityversion',
            name='extra_version',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='entityversion',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Entity'),
        ),
        migrations.AddField(
            model_name='entityversion',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.EntityVersion'),
        ),
        migrations.AddField(
            model_name='entityversion',
            name='sources',
            field=models.ManyToManyField(related_name='source_entityversion', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='entity',
            name='affiliation_versions',
            field=share.models.fields.TypedManyToManyField(through='share.Affiliation', to='share.PersonVersion'),
        ),
        migrations.AddField(
            model_name='entity',
            name='affiliations',
            field=share.models.fields.TypedManyToManyField(through='share.Affiliation', to='share.Person'),
        ),
        migrations.AddField(
            model_name='entity',
            name='change',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_entity', to='share.Change'),
        ),
        migrations.AddField(
            model_name='entity',
            name='extra',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='entity',
            name='extra_version',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='entity',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Entity'),
        ),
        migrations.AddField(
            model_name='entity',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.EntityVersion'),
        ),
        migrations.AddField(
            model_name='entity',
            name='sources',
            field=models.ManyToManyField(related_name='source_entity', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='entity',
            name='version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='share_entity_version', to='share.EntityVersion'),
        ),
        migrations.AddField(
            model_name='emailversion',
            name='extra',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='emailversion',
            name='extra_version',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='emailversion',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Email'),
        ),
        migrations.AddField(
            model_name='emailversion',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.EmailVersion'),
        ),
        migrations.AddField(
            model_name='emailversion',
            name='sources',
            field=models.ManyToManyField(related_name='source_emailversion', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='email',
            name='extra',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='email',
            name='extra_version',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='email',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Email'),
        ),
        migrations.AddField(
            model_name='email',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.EmailVersion'),
        ),
        migrations.AddField(
            model_name='email',
            name='sources',
            field=models.ManyToManyField(related_name='source_email', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='email',
            name='version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='share_email_version', to='share.EmailVersion'),
        ),
        migrations.AddField(
            model_name='contributorversion',
            name='extra',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='contributorversion',
            name='extra_version',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='contributorversion',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Person'),
        ),
        migrations.AddField(
            model_name='contributorversion',
            name='person_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.PersonVersion'),
        ),
        migrations.AddField(
            model_name='contributorversion',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Contributor'),
        ),
        migrations.AddField(
            model_name='contributorversion',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ContributorVersion'),
        ),
        migrations.AddField(
            model_name='contributorversion',
            name='sources',
            field=models.ManyToManyField(related_name='source_contributorversion', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contributor',
            name='extra',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='contributor',
            name='extra_version',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='contributor',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Person'),
        ),
        migrations.AddField(
            model_name='contributor',
            name='person_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.PersonVersion'),
        ),
        migrations.AddField(
            model_name='contributor',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Contributor'),
        ),
        migrations.AddField(
            model_name='contributor',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ContributorVersion'),
        ),
        migrations.AddField(
            model_name='contributor',
            name='sources',
            field=models.ManyToManyField(related_name='source_contributor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contributor',
            name='version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='share_contributor_version', to='share.ContributorVersion'),
        ),
        migrations.AddField(
            model_name='changeset',
            name='normalized_data',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.NormalizedData'),
        ),
        migrations.AddField(
            model_name='change',
            name='change_set',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changes', to='share.ChangeSet'),
        ),
        migrations.AddField(
            model_name='change',
            name='target_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_change', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='change',
            name='target_version_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_version_change', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='awardversion',
            name='change',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_awardversion', to='share.Change'),
        ),
        migrations.AddField(
            model_name='awardversion',
            name='extra',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='awardversion',
            name='extra_version',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='awardversion',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Award'),
        ),
        migrations.AddField(
            model_name='awardversion',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AwardVersion'),
        ),
        migrations.AddField(
            model_name='awardversion',
            name='sources',
            field=models.ManyToManyField(related_name='source_awardversion', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='award',
            name='change',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_award', to='share.Change'),
        ),
        migrations.AddField(
            model_name='award',
            name='extra',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='award',
            name='extra_version',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='award',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Award'),
        ),
        migrations.AddField(
            model_name='award',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AwardVersion'),
        ),
        migrations.AddField(
            model_name='award',
            name='sources',
            field=models.ManyToManyField(related_name='source_award', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='award',
            name='version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='share_award_version', to='share.AwardVersion'),
        ),
        migrations.AddField(
            model_name='associationversion',
            name='change',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_associationversion', to='share.Change'),
        ),
        migrations.AddField(
            model_name='associationversion',
            name='creative_work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWork'),
        ),
        migrations.AddField(
            model_name='associationversion',
            name='creative_work_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWorkVersion'),
        ),
        migrations.AddField(
            model_name='associationversion',
            name='entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Entity'),
        ),
        migrations.AddField(
            model_name='associationversion',
            name='entity_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.EntityVersion'),
        ),
        migrations.AddField(
            model_name='associationversion',
            name='extra',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='associationversion',
            name='extra_version',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='associationversion',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Association'),
        ),
        migrations.AddField(
            model_name='associationversion',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AssociationVersion'),
        ),
        migrations.AddField(
            model_name='associationversion',
            name='sources',
            field=models.ManyToManyField(related_name='source_associationversion', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='association',
            name='change',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_association', to='share.Change'),
        ),
        migrations.AddField(
            model_name='association',
            name='creative_work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWork'),
        ),
        migrations.AddField(
            model_name='association',
            name='creative_work_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWorkVersion'),
        ),
        migrations.AddField(
            model_name='association',
            name='entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Entity'),
        ),
        migrations.AddField(
            model_name='association',
            name='entity_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.EntityVersion'),
        ),
        migrations.AddField(
            model_name='association',
            name='extra',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='association',
            name='extra_version',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='association',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Association'),
        ),
        migrations.AddField(
            model_name='association',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AssociationVersion'),
        ),
        migrations.AddField(
            model_name='association',
            name='sources',
            field=models.ManyToManyField(related_name='source_association', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='association',
            name='version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='share_association_version', to='share.AssociationVersion'),
        ),
        migrations.AddField(
            model_name='affiliationversion',
            name='change',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_affiliationversion', to='share.Change'),
        ),
        migrations.AddField(
            model_name='affiliationversion',
            name='entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Entity'),
        ),
        migrations.AddField(
            model_name='affiliationversion',
            name='entity_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.EntityVersion'),
        ),
        migrations.AddField(
            model_name='affiliationversion',
            name='extra',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='affiliationversion',
            name='extra_version',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='affiliationversion',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Person'),
        ),
        migrations.AddField(
            model_name='affiliationversion',
            name='person_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.PersonVersion'),
        ),
        migrations.AddField(
            model_name='affiliationversion',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Affiliation'),
        ),
        migrations.AddField(
            model_name='affiliationversion',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AffiliationVersion'),
        ),
        migrations.AddField(
            model_name='affiliationversion',
            name='sources',
            field=models.ManyToManyField(related_name='source_affiliationversion', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='change',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_affiliation', to='share.Change'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Entity'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='entity_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.EntityVersion'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='extra',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='extra_version',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Person'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='person_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.PersonVersion'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Affiliation'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AffiliationVersion'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='sources',
            field=models.ManyToManyField(related_name='source_affiliation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='share_affiliation_version', to='share.AffiliationVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='award_versions',
            field=share.models.fields.TypedManyToManyField(through='share.ThroughAwards', to='share.AwardVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='awards',
            field=share.models.fields.TypedManyToManyField(through='share.ThroughAwards', to='share.Award'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='change',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_abstractcreativeworkversion', to='share.Change'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='contributor_versions',
            field=share.models.fields.TypedManyToManyField(through='share.Contributor', to='share.PersonVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='contributors',
            field=share.models.fields.TypedManyToManyField(through='share.Contributor', to='share.Person'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='extra',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='extra_version',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='link_versions',
            field=share.models.fields.TypedManyToManyField(through='share.ThroughLinks', to='share.LinkVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='links',
            field=share.models.fields.TypedManyToManyField(through='share.ThroughLinks', to='share.Link'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWork'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWorkVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='sources',
            field=models.ManyToManyField(related_name='source_abstractcreativeworkversion', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subjected_abstractcreativeworkversion', to='share.Tag'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='subject_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subjected_abstractcreativeworkversion', to='share.TagVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='tag_versions',
            field=share.models.fields.TypedManyToManyField(related_name='tagged_abstractcreativeworkversion', through='share.ThroughTags', to='share.TagVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='tags',
            field=share.models.fields.TypedManyToManyField(related_name='tagged_abstractcreativeworkversion', through='share.ThroughTags', to='share.Tag'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='venue_versions',
            field=share.models.fields.TypedManyToManyField(through='share.ThroughVenues', to='share.VenueVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='venues',
            field=share.models.fields.TypedManyToManyField(through='share.ThroughVenues', to='share.Venue'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='award_versions',
            field=share.models.fields.TypedManyToManyField(through='share.ThroughAwards', to='share.AwardVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='awards',
            field=share.models.fields.TypedManyToManyField(through='share.ThroughAwards', to='share.Award'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='change',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affected_abstractcreativework', to='share.Change'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='contributor_versions',
            field=share.models.fields.TypedManyToManyField(through='share.Contributor', to='share.PersonVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='contributors',
            field=share.models.fields.TypedManyToManyField(through='share.Contributor', to='share.Person'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='extra',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='extra_version',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='link_versions',
            field=share.models.fields.TypedManyToManyField(through='share.ThroughLinks', to='share.LinkVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='links',
            field=share.models.fields.TypedManyToManyField(through='share.ThroughLinks', to='share.Link'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWork'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='same_as_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWorkVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='sources',
            field=models.ManyToManyField(related_name='source_abstractcreativework', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subjected_abstractcreativework', to='share.Tag'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='subject_version',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subjected_abstractcreativework', to='share.TagVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='tag_versions',
            field=share.models.fields.TypedManyToManyField(related_name='tagged_abstractcreativework', through='share.ThroughTags', to='share.TagVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='tags',
            field=share.models.fields.TypedManyToManyField(related_name='tagged_abstractcreativework', through='share.ThroughTags', to='share.Tag'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='venue_versions',
            field=share.models.fields.TypedManyToManyField(through='share.ThroughVenues', to='share.VenueVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='venues',
            field=share.models.fields.TypedManyToManyField(through='share.ThroughVenues', to='share.Venue'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='share_abstractcreativework_version', to='share.AbstractCreativeWorkVersion'),
        ),
        migrations.CreateModel(
            name='CeleryProviderTask',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.celerytask',),
        ),
        migrations.CreateModel(
            name='CreativeWork',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractcreativework',),
        ),
        migrations.CreateModel(
            name='CreativeWorkVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractcreativeworkversion',),
        ),
        migrations.CreateModel(
            name='Funder',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.entity',),
        ),
        migrations.CreateModel(
            name='FunderVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.entityversion',),
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.entity',),
        ),
        migrations.CreateModel(
            name='InstitutionVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.entityversion',),
        ),
        migrations.CreateModel(
            name='Manuscript',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractcreativework',),
        ),
        migrations.CreateModel(
            name='ManuscriptVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractcreativeworkversion',),
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.entity',),
        ),
        migrations.CreateModel(
            name='OrganizationVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.entityversion',),
        ),
        migrations.CreateModel(
            name='Preprint',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractcreativework',),
        ),
        migrations.CreateModel(
            name='PreprintVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractcreativeworkversion',),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractcreativework',),
        ),
        migrations.CreateModel(
            name='ProjectVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractcreativeworkversion',),
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractcreativework',),
        ),
        migrations.CreateModel(
            name='PublicationVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractcreativeworkversion',),
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.entity',),
        ),
        migrations.CreateModel(
            name='PublisherVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.entityversion',),
        ),
        migrations.AddField(
            model_name='rawdata',
            name='tasks',
            field=models.ManyToManyField(to='share.CeleryProviderTask'),
        ),
        migrations.AddField(
            model_name='normalizeddata',
            name='tasks',
            field=models.ManyToManyField(to='share.CeleryProviderTask'),
        ),
        migrations.AlterIndexTogether(
            name='celerytask',
            index_together=set([('type', 'name', 'app_label', 'timestamp')]),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='funder_versions',
            field=share.models.fields.TypedManyToManyField(through='share.Association', to='share.FunderVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='funders',
            field=share.models.fields.TypedManyToManyField(through='share.Association', to='share.Funder'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='institution_versions',
            field=share.models.fields.TypedManyToManyField(through='share.Association', to='share.InstitutionVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='institutions',
            field=share.models.fields.TypedManyToManyField(through='share.Association', to='share.Institution'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='organization_versions',
            field=share.models.fields.TypedManyToManyField(through='share.Association', to='share.OrganizationVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='organizations',
            field=share.models.fields.TypedManyToManyField(through='share.Association', to='share.Organization'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='publisher_versions',
            field=share.models.fields.TypedManyToManyField(through='share.Association', to='share.PublisherVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='publishers',
            field=share.models.fields.TypedManyToManyField(through='share.Association', to='share.Publisher'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='funder_versions',
            field=share.models.fields.TypedManyToManyField(through='share.Association', to='share.FunderVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='funders',
            field=share.models.fields.TypedManyToManyField(through='share.Association', to='share.Funder'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='institution_versions',
            field=share.models.fields.TypedManyToManyField(through='share.Association', to='share.InstitutionVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='institutions',
            field=share.models.fields.TypedManyToManyField(through='share.Association', to='share.Institution'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='organization_versions',
            field=share.models.fields.TypedManyToManyField(through='share.Association', to='share.OrganizationVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='organizations',
            field=share.models.fields.TypedManyToManyField(through='share.Association', to='share.Organization'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='publisher_versions',
            field=share.models.fields.TypedManyToManyField(through='share.Association', to='share.PublisherVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='publishers',
            field=share.models.fields.TypedManyToManyField(through='share.Association', to='share.Publisher'),
        ),
        migrations.AlterUniqueTogether(
            name='rawdata',
            unique_together=set([('provider_doc_id', 'source', 'sha256')]),
        ),
    ]
