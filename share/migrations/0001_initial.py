# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-10-15 21:25
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import share.models.core
import share.models.fields
import share.models.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='ShareUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.TextField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', unique=True, validators=[django.core.validators.MaxLengthValidator(64), django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.')], verbose_name='username')),
                ('first_name', models.TextField(blank=True, validators=[django.core.validators.MaxLengthValidator(64)], verbose_name='first name')),
                ('last_name', models.TextField(blank=True, validators=[django.core.validators.MaxLengthValidator(64)], verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('gravatar', share.models.fields.ShareURLField(blank=True)),
                ('time_zone', models.TextField(blank=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('locale', models.TextField(blank=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_trusted', models.BooleanField(default=False, help_text='Designates whether the user can push directly into the db.', verbose_name='trusted')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('robot', models.TextField(blank=True, validators=[django.core.validators.MaxLengthValidator(40)])),
                ('long_title', models.TextField(blank=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('home_page', share.models.fields.ShareURLField(blank=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Share user',
                'verbose_name_plural': 'Share users',
            },
            managers=[
                ('objects', share.models.core.ShareUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AbstractContribution',
            fields=[
                ('type', models.CharField(db_index=True, max_length=255)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('bibliographic', models.BooleanField(default=True)),
                ('cited_as', models.TextField(blank=True)),
                ('order_cited', models.PositiveIntegerField(null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='AbstractContributionVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(db_index=True, max_length=255)),
                ('action', models.TextField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('bibliographic', models.BooleanField(default=True)),
                ('cited_as', models.TextField(blank=True)),
                ('order_cited', models.PositiveIntegerField(null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
            ],
            options={
                'db_table': None,
            },
        ),
        migrations.CreateModel(
            name='AbstractCreativeWork',
            fields=[
                ('type', models.CharField(db_index=True, max_length=255)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('date_published', models.DateTimeField(null=True)),
                ('date_updated', models.DateTimeField(null=True)),
                ('free_to_read_type', share.models.fields.ShareURLField(blank=True)),
                ('free_to_read_date', models.DateTimeField(null=True)),
                ('rights', models.TextField(blank=True, null=True)),
                ('language', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AbstractCreativeWorkVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(db_index=True, max_length=255)),
                ('action', models.TextField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('title', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('date_published', models.DateTimeField(null=True)),
                ('date_updated', models.DateTimeField(null=True)),
                ('free_to_read_type', share.models.fields.ShareURLField(blank=True)),
                ('free_to_read_date', models.DateTimeField(null=True)),
                ('rights', models.TextField(blank=True, null=True)),
                ('language', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
            ],
            options={
                'ordering': ('-date_modified',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AbstractEntity',
            fields=[
                ('type', models.CharField(db_index=True, max_length=255)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
                ('location', models.TextField(blank=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('additional_name', models.TextField(blank=True, null=True)),
                ('suffix', models.TextField(blank=True, null=True)),
                ('family_name', models.TextField(blank=True, null=True)),
                ('given_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'AbstractEntities',
            },
        ),
        migrations.CreateModel(
            name='AbstractEntityRelation',
            fields=[
                ('type', models.CharField(db_index=True, max_length=255)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='AbstractEntityRelationVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(db_index=True, max_length=255)),
                ('action', models.TextField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
            ],
            options={
                'db_table': None,
            },
        ),
        migrations.CreateModel(
            name='AbstractEntityVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(db_index=True, max_length=255)),
                ('action', models.TextField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('name', models.TextField(blank=True)),
                ('location', models.TextField(blank=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('additional_name', models.TextField(blank=True, null=True)),
                ('suffix', models.TextField(blank=True, null=True)),
                ('family_name', models.TextField(blank=True, null=True)),
                ('given_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'AbstractEntities',
                'db_table': None,
            },
        ),
        migrations.CreateModel(
            name='AbstractWorkRelation',
            fields=[
                ('type', models.CharField(db_index=True, max_length=255)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='AbstractWorkRelationVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(db_index=True, max_length=255)),
                ('action', models.TextField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
            ],
            options={
                'db_table': None,
            },
        ),
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('url', share.models.fields.ShareURLField(blank=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AwardVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.TextField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('name', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('url', share.models.fields.ShareURLField(blank=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
            ],
            options={
                'ordering': ('-date_modified',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CeleryTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(db_index=True, max_length=255)),
                ('uuid', models.UUIDField(db_index=True, unique=True)),
                ('name', models.TextField(blank=True, db_index=True)),
                ('args', models.TextField(blank=True)),
                ('kwargs', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('status', models.IntegerField(choices=[(0, 'started'), (1, 'retried'), (2, 'failed'), (3, 'succeeded')])),
                ('app_label', models.TextField(blank=True, db_index=True, null=True)),
                ('app_version', models.TextField(blank=True, db_index=True, null=True)),
                ('provider', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='provider', to=settings.AUTH_USER_MODEL)),
                ('started_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='started_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-timestamp',),
            },
        ),
        migrations.CreateModel(
            name='Change',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change', django.contrib.postgres.fields.jsonb.JSONField()),
                ('node_id', models.TextField(db_index=True)),
                ('type', models.IntegerField(choices=[(0, 'create'), (1, 'merge'), (2, 'update')], editable=False)),
                ('target_id', models.PositiveIntegerField(null=True)),
                ('target_version_id', models.PositiveIntegerField(null=True)),
            ],
            options={
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='ChangeSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(0, 'pending'), (1, 'accepted'), (2, 'rejected')], default=0)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='EntityIdentifier',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uri', share.models.fields.ShareURLField(unique=True)),
                ('host', models.TextField(editable=False)),
                ('scheme', models.TextField(editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('change', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_entityidentifier', to='share.Change')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identifiers', to='share.AbstractEntity')),
                ('entity_version', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractEntityVersion')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EntityIdentifierVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.TextField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('uri', share.models.fields.ShareURLField()),
                ('host', models.TextField(editable=False)),
                ('scheme', models.TextField(editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('change', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_entityidentifierversion', to='share.Change')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractEntity')),
                ('entity_version', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractEntityVersion')),
            ],
            options={
                'ordering': ('-date_modified',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExtraData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', share.models.fields.DateTimeAwareJSONField(default=dict)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('change', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_extradata', to='share.Change')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ExtraData')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExtraDataVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.TextField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('data', share.models.fields.DateTimeAwareJSONField(default=dict)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('change', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_extradataversion', to='share.Change')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ExtraData')),
                ('same_as_version', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ExtraDataVersion')),
            ],
            options={
                'abstract': False,
                'db_table': None,
            },
        ),
        migrations.CreateModel(
            name='NormalizedData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(null=True)),
                ('normalized_data', share.models.fields.DateTimeAwareJSONField(validators=[share.models.validators.JSONLDValidator()])),
            ],
        ),
        migrations.CreateModel(
            name='ProviderRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(0, 'pending'), (1, 'accepted'), (2, 'implemented'), (3, 'rejected')], default=0)),
                ('submitted_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('contact_name', models.TextField(max_length=300)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_affiliation', models.TextField(max_length=300)),
                ('direct_source', models.BooleanField(default=False)),
                ('source_name', models.TextField(max_length=300)),
                ('source_description', models.TextField(max_length=1000)),
                ('source_rate_limit', models.TextField(blank=True, default='', max_length=300)),
                ('source_documentation', models.TextField(blank=True, default='', max_length=300)),
                ('source_preferred_metadata_prefix', models.TextField(blank=True, default='', max_length=300)),
                ('source_oai', models.BooleanField(default=False)),
                ('source_base_url', models.URLField(blank=True, default='')),
                ('source_disallowed_sets', models.TextField(blank=True, default='', max_length=300)),
                ('source_additional_info', models.TextField(blank=True, default='', max_length=1000)),
                ('submitted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='RawData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('app_label', models.TextField(db_index=True)),
                ('provider_doc_id', models.TextField()),
                ('data', models.TextField()),
                ('sha256', models.TextField(validators=[django.core.validators.MaxLengthValidator(64)])),
                ('date_seen', models.DateTimeField(auto_now=True)),
                ('date_harvested', models.DateTimeField(auto_now_add=True)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Raw data',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lineages', django.contrib.postgres.fields.jsonb.JSONField(editable=False)),
                ('name', models.TextField(db_index=True, unique=True)),
                ('parents', models.ManyToManyField(related_name='_subject_parents_+', to='share.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('change', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_tag', to='share.Change')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TagVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.TextField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('name', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('change', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_tagversion', to='share.Change')),
                ('extra', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Tag')),
                ('same_as_version', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.TagVersion')),
            ],
            options={
                'ordering': ('-date_modified',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThroughContribution',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('change', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_throughcontribution', to='share.Change')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('related', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractContribution')),
                ('related_version', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractContributionVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughContribution')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThroughContributionAwards',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('award', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Award')),
                ('award_version', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AwardVersion')),
                ('change', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_throughcontributionawards', to='share.Change')),
                ('contribution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractContribution')),
                ('contribution_version', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractContributionVersion')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughContributionAwards')),
            ],
        ),
        migrations.CreateModel(
            name='ThroughContributionAwardsVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.TextField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('award', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Award')),
                ('award_version', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AwardVersion')),
                ('change', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_throughcontributionawardsversion', to='share.Change')),
                ('contribution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractContribution')),
                ('contribution_version', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractContributionVersion')),
                ('extra', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughContributionAwards')),
                ('same_as_version', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughContributionAwardsVersion')),
            ],
            options={
                'db_table': None,
            },
        ),
        migrations.CreateModel(
            name='ThroughContributionVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.TextField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('change', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_throughcontributionversion', to='share.Change')),
                ('extra', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ExtraDataVersion')),
                ('related', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractContribution')),
                ('related_version', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractContributionVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughContribution')),
                ('same_as_version', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughContributionVersion')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractContribution')),
                ('subject_version', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractContributionVersion')),
            ],
            options={
                'ordering': ('-date_modified',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThroughSubjects',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('change', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_throughsubjects', to='share.Change')),
                ('creative_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWork')),
                ('creative_work_version', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWorkVersion')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughSubjects')),
            ],
        ),
        migrations.CreateModel(
            name='ThroughSubjectsVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.TextField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('change', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_throughsubjectsversion', to='share.Change')),
                ('creative_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWork')),
                ('creative_work_version', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWorkVersion')),
                ('extra', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughSubjects')),
                ('same_as_version', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughSubjectsVersion')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Subject')),
            ],
            options={
                'db_table': None,
            },
        ),
        migrations.CreateModel(
            name='ThroughTags',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('change', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_throughtags', to='share.Change')),
                ('creative_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWork')),
                ('creative_work_version', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWorkVersion')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughTags')),
            ],
        ),
        migrations.CreateModel(
            name='ThroughTagsVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.TextField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('change', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_throughtagsversion', to='share.Change')),
                ('creative_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWork')),
                ('creative_work_version', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWorkVersion')),
                ('extra', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughTags')),
                ('same_as_version', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughTagsVersion')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Tag')),
                ('tag_version', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.TagVersion')),
            ],
            options={
                'db_table': None,
            },
        ),
        migrations.CreateModel(
            name='ThroughVenues',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('change', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_throughvenues', to='share.Change')),
                ('creative_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.AbstractCreativeWork')),
                ('creative_work_version', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWorkVersion')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughVenues')),
            ],
        ),
        migrations.CreateModel(
            name='ThroughVenuesVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.TextField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('change', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_throughvenuesversion', to='share.Change')),
                ('creative_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWork')),
                ('creative_work_version', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWorkVersion')),
                ('extra', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughVenues')),
                ('same_as_version', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughVenuesVersion')),
            ],
            options={
                'db_table': None,
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
                ('venue_type', share.models.fields.ShareURLField(blank=True)),
                ('location', share.models.fields.ShareURLField(blank=True)),
                ('community_identifier', share.models.fields.ShareURLField(blank=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('change', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_venue', to='share.Change')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Venue')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VenueVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.TextField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('name', models.TextField(blank=True)),
                ('venue_type', share.models.fields.ShareURLField(blank=True)),
                ('location', share.models.fields.ShareURLField(blank=True)),
                ('community_identifier', share.models.fields.ShareURLField(blank=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('change', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_venueversion', to='share.Change')),
                ('extra', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Venue')),
                ('same_as_version', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.VenueVersion')),
            ],
            options={
                'ordering': ('-date_modified',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkIdentifier',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uri', share.models.fields.ShareURLField(unique=True)),
                ('host', models.TextField(editable=False)),
                ('scheme', models.TextField(editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('change', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_workidentifier', to='share.Change')),
                ('creative_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identifiers', to='share.AbstractCreativeWork')),
                ('creative_work_version', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWorkVersion')),
                ('extra', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.WorkIdentifier')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkIdentifierVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.TextField(max_length=10)),
                ('persistent_id', models.PositiveIntegerField()),
                ('uri', share.models.fields.ShareURLField()),
                ('host', models.TextField(editable=False)),
                ('scheme', models.TextField(editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('change', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_workidentifierversion', to='share.Change')),
                ('creative_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWork')),
                ('creative_work_version', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWorkVersion')),
                ('extra', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData')),
                ('extra_version', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ExtraDataVersion')),
                ('same_as', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.WorkIdentifier')),
                ('same_as_version', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.WorkIdentifierVersion')),
            ],
            options={
                'ordering': ('-date_modified',),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='workidentifier',
            name='same_as_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.WorkIdentifierVersion'),
        ),
        migrations.AddField(
            model_name='workidentifier',
            name='sources',
            field=models.ManyToManyField(editable=False, related_name='source_workidentifier', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='workidentifier',
            name='version',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='share_workidentifier_version', to='share.WorkIdentifierVersion'),
        ),
        migrations.AddField(
            model_name='venue',
            name='same_as_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.VenueVersion'),
        ),
        migrations.AddField(
            model_name='venue',
            name='sources',
            field=models.ManyToManyField(editable=False, related_name='source_venue', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='venue',
            name='version',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='share_venue_version', to='share.VenueVersion'),
        ),
        migrations.AddField(
            model_name='throughvenuesversion',
            name='venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Venue'),
        ),
        migrations.AddField(
            model_name='throughvenuesversion',
            name='venue_version',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.VenueVersion'),
        ),
        migrations.AddField(
            model_name='throughvenues',
            name='same_as_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughVenuesVersion'),
        ),
        migrations.AddField(
            model_name='throughvenues',
            name='sources',
            field=models.ManyToManyField(editable=False, related_name='source_throughvenues', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='throughvenues',
            name='venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Venue'),
        ),
        migrations.AddField(
            model_name='throughvenues',
            name='venue_version',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.VenueVersion'),
        ),
        migrations.AddField(
            model_name='throughvenues',
            name='version',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='share_throughvenues_version', to='share.ThroughVenuesVersion'),
        ),
        migrations.AddField(
            model_name='throughtags',
            name='same_as_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughTagsVersion'),
        ),
        migrations.AddField(
            model_name='throughtags',
            name='sources',
            field=models.ManyToManyField(editable=False, related_name='source_throughtags', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='throughtags',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Tag'),
        ),
        migrations.AddField(
            model_name='throughtags',
            name='tag_version',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.TagVersion'),
        ),
        migrations.AddField(
            model_name='throughtags',
            name='version',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='share_throughtags_version', to='share.ThroughTagsVersion'),
        ),
        migrations.AddField(
            model_name='throughsubjects',
            name='same_as_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughSubjectsVersion'),
        ),
        migrations.AddField(
            model_name='throughsubjects',
            name='sources',
            field=models.ManyToManyField(editable=False, related_name='source_throughsubjects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='throughsubjects',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.Subject'),
        ),
        migrations.AddField(
            model_name='throughsubjects',
            name='version',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='share_throughsubjects_version', to='share.ThroughSubjectsVersion'),
        ),
        migrations.AddField(
            model_name='throughcontributionawards',
            name='same_as_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughContributionAwardsVersion'),
        ),
        migrations.AddField(
            model_name='throughcontributionawards',
            name='sources',
            field=models.ManyToManyField(editable=False, related_name='source_throughcontributionawards', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='throughcontributionawards',
            name='version',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='share_throughcontributionawards_version', to='share.ThroughContributionAwardsVersion'),
        ),
        migrations.AddField(
            model_name='throughcontribution',
            name='same_as_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ThroughContributionVersion'),
        ),
        migrations.AddField(
            model_name='throughcontribution',
            name='sources',
            field=models.ManyToManyField(editable=False, related_name='source_throughcontribution', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='throughcontribution',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractContribution'),
        ),
        migrations.AddField(
            model_name='throughcontribution',
            name='subject_version',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractContributionVersion'),
        ),
        migrations.AddField(
            model_name='throughcontribution',
            name='version',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='share_throughcontribution_version', to='share.ThroughContributionVersion'),
        ),
        migrations.AddField(
            model_name='tag',
            name='same_as_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.TagVersion'),
        ),
        migrations.AddField(
            model_name='tag',
            name='sources',
            field=models.ManyToManyField(editable=False, related_name='source_tag', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tag',
            name='version',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='share_tag_version', to='share.TagVersion'),
        ),
        migrations.AddField(
            model_name='normalizeddata',
            name='raw',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.RawData'),
        ),
        migrations.AddField(
            model_name='normalizeddata',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='extradata',
            name='same_as_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='extradata',
            name='sources',
            field=models.ManyToManyField(editable=False, related_name='source_extradata', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='extradata',
            name='version',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='share_extradata_version', to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='entityidentifierversion',
            name='extra',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='entityidentifierversion',
            name='extra_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='entityidentifierversion',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.EntityIdentifier'),
        ),
        migrations.AddField(
            model_name='entityidentifierversion',
            name='same_as_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.EntityIdentifierVersion'),
        ),
        migrations.AddField(
            model_name='entityidentifier',
            name='extra',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='entityidentifier',
            name='extra_version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='entityidentifier',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.EntityIdentifier'),
        ),
        migrations.AddField(
            model_name='entityidentifier',
            name='same_as_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.EntityIdentifierVersion'),
        ),
        migrations.AddField(
            model_name='entityidentifier',
            name='sources',
            field=models.ManyToManyField(editable=False, related_name='source_entityidentifier', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='entityidentifier',
            name='version',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='share_entityidentifier_version', to='share.EntityIdentifierVersion'),
        ),
        migrations.AddField(
            model_name='changeset',
            name='normalized_data',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='share.NormalizedData'),
        ),
        migrations.AddField(
            model_name='change',
            name='change_set',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changes', to='share.ChangeSet'),
        ),
        migrations.AddField(
            model_name='change',
            name='target_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_change', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='change',
            name='target_version_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_version_change', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='awardversion',
            name='change',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_awardversion', to='share.Change'),
        ),
        migrations.AddField(
            model_name='awardversion',
            name='extra',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='awardversion',
            name='extra_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='awardversion',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Award'),
        ),
        migrations.AddField(
            model_name='awardversion',
            name='same_as_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AwardVersion'),
        ),
        migrations.AddField(
            model_name='award',
            name='change',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_award', to='share.Change'),
        ),
        migrations.AddField(
            model_name='award',
            name='extra',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='award',
            name='extra_version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='award',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.Award'),
        ),
        migrations.AddField(
            model_name='award',
            name='same_as_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AwardVersion'),
        ),
        migrations.AddField(
            model_name='award',
            name='sources',
            field=models.ManyToManyField(editable=False, related_name='source_award', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='award',
            name='version',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='share_award_version', to='share.AwardVersion'),
        ),
        migrations.AddField(
            model_name='abstractworkrelationversion',
            name='change',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_abstractworkrelationversion', to='share.Change'),
        ),
        migrations.AddField(
            model_name='abstractworkrelationversion',
            name='extra',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='abstractworkrelationversion',
            name='extra_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='abstractworkrelationversion',
            name='related',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWork'),
        ),
        migrations.AddField(
            model_name='abstractworkrelationversion',
            name='related_version',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWorkVersion'),
        ),
        migrations.AddField(
            model_name='abstractworkrelationversion',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractWorkRelation'),
        ),
        migrations.AddField(
            model_name='abstractworkrelationversion',
            name='same_as_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractWorkRelationVersion'),
        ),
        migrations.AddField(
            model_name='abstractworkrelationversion',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWork'),
        ),
        migrations.AddField(
            model_name='abstractworkrelationversion',
            name='subject_version',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWorkVersion'),
        ),
        migrations.AddField(
            model_name='abstractworkrelation',
            name='change',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_abstractworkrelation', to='share.Change'),
        ),
        migrations.AddField(
            model_name='abstractworkrelation',
            name='extra',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='abstractworkrelation',
            name='extra_version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='abstractworkrelation',
            name='related',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_creative_work_relations', to='share.AbstractCreativeWork'),
        ),
        migrations.AddField(
            model_name='abstractworkrelation',
            name='related_version',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWorkVersion'),
        ),
        migrations.AddField(
            model_name='abstractworkrelation',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractWorkRelation'),
        ),
        migrations.AddField(
            model_name='abstractworkrelation',
            name='same_as_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractWorkRelationVersion'),
        ),
        migrations.AddField(
            model_name='abstractworkrelation',
            name='sources',
            field=models.ManyToManyField(editable=False, related_name='source_abstractworkrelation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='abstractworkrelation',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_creative_work_relations', to='share.AbstractCreativeWork'),
        ),
        migrations.AddField(
            model_name='abstractworkrelation',
            name='subject_version',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWorkVersion'),
        ),
        migrations.AddField(
            model_name='abstractworkrelation',
            name='version',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='share_abstractworkrelation_version', to='share.AbstractWorkRelationVersion'),
        ),
        migrations.AddField(
            model_name='abstractentityversion',
            name='change',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_abstractentityversion', to='share.Change'),
        ),
        migrations.AddField(
            model_name='abstractentityversion',
            name='extra',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='abstractentityversion',
            name='extra_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='abstractentityversion',
            name='related_entitie_versions',
            field=share.models.fields.TypedManyToManyField(editable=False, related_name='_abstractentityversion_related_entitie_versions_+', through='share.AbstractEntityRelation', to='share.AbstractEntityVersion'),
        ),
        migrations.AddField(
            model_name='abstractentityversion',
            name='related_entities',
            field=share.models.fields.TypedManyToManyField(related_name='_abstractentityversion_related_entities_+', through='share.AbstractEntityRelation', to='share.AbstractEntity'),
        ),
        migrations.AddField(
            model_name='abstractentityversion',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractEntity'),
        ),
        migrations.AddField(
            model_name='abstractentityversion',
            name='same_as_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractEntityVersion'),
        ),
        migrations.AddField(
            model_name='abstractentityrelationversion',
            name='change',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_abstractentityrelationversion', to='share.Change'),
        ),
        migrations.AddField(
            model_name='abstractentityrelationversion',
            name='extra',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='abstractentityrelationversion',
            name='extra_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='abstractentityrelationversion',
            name='related',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractEntity'),
        ),
        migrations.AddField(
            model_name='abstractentityrelationversion',
            name='related_version',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractEntityVersion'),
        ),
        migrations.AddField(
            model_name='abstractentityrelationversion',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractEntityRelation'),
        ),
        migrations.AddField(
            model_name='abstractentityrelationversion',
            name='same_as_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractEntityRelationVersion'),
        ),
        migrations.AddField(
            model_name='abstractentityrelationversion',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractEntity'),
        ),
        migrations.AddField(
            model_name='abstractentityrelationversion',
            name='subject_version',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractEntityVersion'),
        ),
        migrations.AddField(
            model_name='abstractentityrelation',
            name='change',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_abstractentityrelation', to='share.Change'),
        ),
        migrations.AddField(
            model_name='abstractentityrelation',
            name='extra',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='abstractentityrelation',
            name='extra_version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='abstractentityrelation',
            name='related',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractEntity'),
        ),
        migrations.AddField(
            model_name='abstractentityrelation',
            name='related_version',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractEntityVersion'),
        ),
        migrations.AddField(
            model_name='abstractentityrelation',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractEntityRelation'),
        ),
        migrations.AddField(
            model_name='abstractentityrelation',
            name='same_as_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractEntityRelationVersion'),
        ),
        migrations.AddField(
            model_name='abstractentityrelation',
            name='sources',
            field=models.ManyToManyField(editable=False, related_name='source_abstractentityrelation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='abstractentityrelation',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractEntity'),
        ),
        migrations.AddField(
            model_name='abstractentityrelation',
            name='subject_version',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractEntityVersion'),
        ),
        migrations.AddField(
            model_name='abstractentityrelation',
            name='version',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='share_abstractentityrelation_version', to='share.AbstractEntityRelationVersion'),
        ),
        migrations.AddField(
            model_name='abstractentity',
            name='change',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_abstractentity', to='share.Change'),
        ),
        migrations.AddField(
            model_name='abstractentity',
            name='extra',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='abstractentity',
            name='extra_version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='abstractentity',
            name='related_entitie_versions',
            field=share.models.fields.TypedManyToManyField(editable=False, related_name='_abstractentity_related_entitie_versions_+', through='share.AbstractEntityRelation', to='share.AbstractEntityVersion'),
        ),
        migrations.AddField(
            model_name='abstractentity',
            name='related_entities',
            field=share.models.fields.TypedManyToManyField(through='share.AbstractEntityRelation', to='share.AbstractEntity'),
        ),
        migrations.AddField(
            model_name='abstractentity',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractEntity'),
        ),
        migrations.AddField(
            model_name='abstractentity',
            name='same_as_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractEntityVersion'),
        ),
        migrations.AddField(
            model_name='abstractentity',
            name='sources',
            field=models.ManyToManyField(editable=False, related_name='source_abstractentity', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='abstractentity',
            name='version',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='share_abstractentity_version', to='share.AbstractEntityVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='change',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_abstractcreativeworkversion', to='share.Change'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='contributor_versions',
            field=share.models.fields.TypedManyToManyField(editable=False, related_name='_abstractcreativeworkversion_contributor_versions_+', through='share.AbstractContribution', to='share.AbstractEntityVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='contributors',
            field=share.models.fields.TypedManyToManyField(related_name='_abstractcreativeworkversion_contributors_+', through='share.AbstractContribution', to='share.AbstractEntity'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='extra',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='extra_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='related_work_versions',
            field=share.models.fields.TypedManyToManyField(editable=False, related_name='_abstractcreativeworkversion_related_work_versions_+', through='share.AbstractWorkRelation', to='share.AbstractCreativeWorkVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='related_works',
            field=share.models.fields.TypedManyToManyField(related_name='_abstractcreativeworkversion_related_works_+', through='share.AbstractWorkRelation', to='share.AbstractCreativeWork'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWork'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='same_as_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWorkVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='subjects',
            field=share.models.fields.TypedManyToManyField(related_name='_abstractcreativeworkversion_subjects_+', through='share.ThroughSubjects', to='share.Subject'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='tag_versions',
            field=share.models.fields.TypedManyToManyField(editable=False, related_name='_abstractcreativeworkversion_tag_versions_+', through='share.ThroughTags', to='share.TagVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='tags',
            field=share.models.fields.TypedManyToManyField(related_name='_abstractcreativeworkversion_tags_+', through='share.ThroughTags', to='share.Tag'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='venue_versions',
            field=share.models.fields.TypedManyToManyField(editable=False, related_name='_abstractcreativeworkversion_venue_versions_+', through='share.ThroughVenues', to='share.VenueVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativeworkversion',
            name='venues',
            field=share.models.fields.TypedManyToManyField(related_name='_abstractcreativeworkversion_venues_+', through='share.ThroughVenues', to='share.Venue'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='change',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_abstractcreativework', to='share.Change'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='contributor_versions',
            field=share.models.fields.TypedManyToManyField(editable=False, related_name='_abstractcreativework_contributor_versions_+', through='share.AbstractContribution', to='share.AbstractEntityVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='contributors',
            field=share.models.fields.TypedManyToManyField(through='share.AbstractContribution', to='share.AbstractEntity'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='extra',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='extra_version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='related_work_versions',
            field=share.models.fields.TypedManyToManyField(editable=False, related_name='_abstractcreativework_related_work_versions_+', through='share.AbstractWorkRelation', to='share.AbstractCreativeWorkVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='related_works',
            field=share.models.fields.TypedManyToManyField(through='share.AbstractWorkRelation', to='share.AbstractCreativeWork'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWork'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='same_as_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWorkVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='sources',
            field=models.ManyToManyField(editable=False, related_name='source_abstractcreativework', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='subjects',
            field=share.models.fields.TypedManyToManyField(related_name='subjected_works', through='share.ThroughSubjects', to='share.Subject'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='tag_versions',
            field=share.models.fields.TypedManyToManyField(editable=False, related_name='_abstractcreativework_tag_versions_+', through='share.ThroughTags', to='share.TagVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='tags',
            field=share.models.fields.TypedManyToManyField(related_name='tagged_works', through='share.ThroughTags', to='share.Tag'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='venue_versions',
            field=share.models.fields.TypedManyToManyField(editable=False, related_name='_abstractcreativework_venue_versions_+', through='share.ThroughVenues', to='share.VenueVersion'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='venues',
            field=share.models.fields.TypedManyToManyField(through='share.ThroughVenues', to='share.Venue'),
        ),
        migrations.AddField(
            model_name='abstractcreativework',
            name='version',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='share_abstractcreativework_version', to='share.AbstractCreativeWorkVersion'),
        ),
        migrations.AddField(
            model_name='abstractcontributionversion',
            name='award_versions',
            field=share.models.fields.TypedManyToManyField(editable=False, related_name='_abstractcontributionversion_award_versions_+', through='share.ThroughContributionAwards', to='share.AwardVersion'),
        ),
        migrations.AddField(
            model_name='abstractcontributionversion',
            name='awards',
            field=share.models.fields.TypedManyToManyField(through='share.ThroughContributionAwards', to='share.Award'),
        ),
        migrations.AddField(
            model_name='abstractcontributionversion',
            name='change',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_abstractcontributionversion', to='share.Change'),
        ),
        migrations.AddField(
            model_name='abstractcontributionversion',
            name='contributed_throug_versions',
            field=share.models.fields.TypedManyToManyField(editable=False, related_name='_abstractcontributionversion_contributed_throug_versions_+', through='share.ThroughContribution', to='share.AbstractContributionVersion'),
        ),
        migrations.AddField(
            model_name='abstractcontributionversion',
            name='contributed_through',
            field=share.models.fields.TypedManyToManyField(through='share.ThroughContribution', to='share.AbstractContribution'),
        ),
        migrations.AddField(
            model_name='abstractcontributionversion',
            name='creative_work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWork'),
        ),
        migrations.AddField(
            model_name='abstractcontributionversion',
            name='creative_work_version',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWorkVersion'),
        ),
        migrations.AddField(
            model_name='abstractcontributionversion',
            name='entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractEntity'),
        ),
        migrations.AddField(
            model_name='abstractcontributionversion',
            name='entity_version',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractEntityVersion'),
        ),
        migrations.AddField(
            model_name='abstractcontributionversion',
            name='extra',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='abstractcontributionversion',
            name='extra_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='abstractcontributionversion',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractContribution'),
        ),
        migrations.AddField(
            model_name='abstractcontributionversion',
            name='same_as_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractContributionVersion'),
        ),
        migrations.AddField(
            model_name='abstractcontribution',
            name='award_versions',
            field=share.models.fields.TypedManyToManyField(editable=False, related_name='_abstractcontribution_award_versions_+', through='share.ThroughContributionAwards', to='share.AwardVersion'),
        ),
        migrations.AddField(
            model_name='abstractcontribution',
            name='awards',
            field=share.models.fields.TypedManyToManyField(through='share.ThroughContributionAwards', to='share.Award'),
        ),
        migrations.AddField(
            model_name='abstractcontribution',
            name='change',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='affected_abstractcontribution', to='share.Change'),
        ),
        migrations.AddField(
            model_name='abstractcontribution',
            name='contributed_throug_versions',
            field=share.models.fields.TypedManyToManyField(editable=False, related_name='_abstractcontribution_contributed_throug_versions_+', through='share.ThroughContribution', to='share.AbstractContributionVersion'),
        ),
        migrations.AddField(
            model_name='abstractcontribution',
            name='contributed_through',
            field=share.models.fields.TypedManyToManyField(through='share.ThroughContribution', to='share.AbstractContribution'),
        ),
        migrations.AddField(
            model_name='abstractcontribution',
            name='creative_work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contributions', to='share.AbstractCreativeWork'),
        ),
        migrations.AddField(
            model_name='abstractcontribution',
            name='creative_work_version',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractCreativeWorkVersion'),
        ),
        migrations.AddField(
            model_name='abstractcontribution',
            name='entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contributed', to='share.AbstractEntity'),
        ),
        migrations.AddField(
            model_name='abstractcontribution',
            name='entity_version',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractEntityVersion'),
        ),
        migrations.AddField(
            model_name='abstractcontribution',
            name='extra',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraData'),
        ),
        migrations.AddField(
            model_name='abstractcontribution',
            name='extra_version',
            field=models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='share.ExtraDataVersion'),
        ),
        migrations.AddField(
            model_name='abstractcontribution',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractContribution'),
        ),
        migrations.AddField(
            model_name='abstractcontribution',
            name='same_as_version',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='share.AbstractContributionVersion'),
        ),
        migrations.AddField(
            model_name='abstractcontribution',
            name='sources',
            field=models.ManyToManyField(editable=False, related_name='source_abstractcontribution', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='abstractcontribution',
            name='version',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='share_abstractcontribution_version', to='share.AbstractContributionVersion'),
        ),
        migrations.CreateModel(
            name='CeleryProviderTask',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.celerytask',),
        ),
        migrations.CreateModel(
            name='Cites',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractworkrelation',),
        ),
        migrations.CreateModel(
            name='CitesVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractworkrelationversion',),
        ),
        migrations.CreateModel(
            name='Contribution',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractcontribution',),
        ),
        migrations.CreateModel(
            name='ContributionVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractcontributionversion',),
        ),
        migrations.CreateModel(
            name='CreativeWork',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractcreativework',),
        ),
        migrations.CreateModel(
            name='CreativeWorkVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractcreativeworkversion',),
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractentity',),
        ),
        migrations.CreateModel(
            name='EntityVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractentityversion',),
        ),
        migrations.CreateModel(
            name='IsAffiliatedWith',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractentityrelation',),
        ),
        migrations.CreateModel(
            name='IsAffiliatedWithVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractentityrelationversion',),
        ),
        migrations.CreateModel(
            name='IsDerivedFrom',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractworkrelation',),
        ),
        migrations.CreateModel(
            name='IsDerivedFromVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractworkrelationversion',),
        ),
        migrations.CreateModel(
            name='IsPartOf',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractworkrelation',),
        ),
        migrations.CreateModel(
            name='IsPartOfVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractworkrelationversion',),
        ),
        migrations.CreateModel(
            name='IsSupplementTo',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractworkrelation',),
        ),
        migrations.CreateModel(
            name='IsSupplementToVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractworkrelationversion',),
        ),
        migrations.CreateModel(
            name='UnknownEntityRelation',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractentityrelation',),
        ),
        migrations.CreateModel(
            name='UnknownEntityRelationVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractentityrelationversion',),
        ),
        migrations.CreateModel(
            name='UnknownWorkRelation',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractworkrelation',),
        ),
        migrations.CreateModel(
            name='UnknownWorkRelationVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.abstractworkrelationversion',),
        ),
        migrations.AlterUniqueTogether(
            name='throughvenues',
            unique_together=set([('venue', 'creative_work')]),
        ),
        migrations.AlterUniqueTogether(
            name='throughtags',
            unique_together=set([('tag', 'creative_work')]),
        ),
        migrations.AlterUniqueTogether(
            name='throughsubjects',
            unique_together=set([('subject', 'creative_work')]),
        ),
        migrations.AlterUniqueTogether(
            name='throughcontributionawards',
            unique_together=set([('contribution', 'award')]),
        ),
        migrations.AddField(
            model_name='rawdata',
            name='tasks',
            field=models.ManyToManyField(to='share.CeleryProviderTask'),
        ),
        migrations.AddField(
            model_name='normalizeddata',
            name='tasks',
            field=models.ManyToManyField(to='share.CeleryProviderTask'),
        ),
        migrations.AlterIndexTogether(
            name='change',
            index_together=set([('node_id', 'change_set', 'target_type'), ('target_type', 'target_id')]),
        ),
        migrations.AlterIndexTogether(
            name='celerytask',
            index_together=set([('type', 'name', 'app_label', 'timestamp')]),
        ),
        migrations.AlterUniqueTogether(
            name='abstractworkrelation',
            unique_together=set([('subject', 'related', 'type')]),
        ),
        migrations.AlterIndexTogether(
            name='abstractentityversion',
            index_together=set([('type', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='abstractentityrelation',
            unique_together=set([('subject', 'related', 'type')]),
        ),
        migrations.AlterIndexTogether(
            name='abstractentity',
            index_together=set([('type', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='abstractcontribution',
            unique_together=set([('entity', 'creative_work', 'type')]),
        ),
        migrations.CreateModel(
            name='CollaboratorContribution',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.contribution',),
        ),
        migrations.CreateModel(
            name='CollaboratorContributionVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.contributionversion',),
        ),
        migrations.CreateModel(
            name='Consortium',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.entity',),
        ),
        migrations.CreateModel(
            name='ConsortiumVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.entityversion',),
        ),
        migrations.CreateModel(
            name='DataSet',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.creativework',),
        ),
        migrations.CreateModel(
            name='DataSetVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.creativeworkversion',),
        ),
        migrations.CreateModel(
            name='FunderContribution',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.contribution',),
        ),
        migrations.CreateModel(
            name='FunderContributionVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.contributionversion',),
        ),
        migrations.CreateModel(
            name='HostContribution',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.contribution',),
        ),
        migrations.CreateModel(
            name='HostContributionVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.contributionversion',),
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.entity',),
        ),
        migrations.CreateModel(
            name='InstitutionVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.entityversion',),
        ),
        migrations.CreateModel(
            name='IsEmployedBy',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.isaffiliatedwith',),
        ),
        migrations.CreateModel(
            name='IsEmployedByVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.isaffiliatedwithversion',),
        ),
        migrations.CreateModel(
            name='IsMemberOf',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.isaffiliatedwith',),
        ),
        migrations.CreateModel(
            name='IsMemberOfVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.isaffiliatedwithversion',),
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.entity',),
        ),
        migrations.CreateModel(
            name='OrganizationVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.entityversion',),
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.entity',),
        ),
        migrations.CreateModel(
            name='PersonVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.entityversion',),
        ),
        migrations.CreateModel(
            name='Poster',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.creativework',),
        ),
        migrations.CreateModel(
            name='PosterVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.creativeworkversion',),
        ),
        migrations.CreateModel(
            name='Presentation',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.creativework',),
        ),
        migrations.CreateModel(
            name='PresentationVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.creativeworkversion',),
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.creativework',),
        ),
        migrations.CreateModel(
            name='PublicationVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.creativeworkversion',),
        ),
        migrations.CreateModel(
            name='PublisherContribution',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.contribution',),
        ),
        migrations.CreateModel(
            name='PublisherContributionVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.contributionversion',),
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.creativework',),
        ),
        migrations.CreateModel(
            name='SoftwareVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.creativeworkversion',),
        ),
        migrations.AlterUniqueTogether(
            name='rawdata',
            unique_together=set([('provider_doc_id', 'source', 'sha256')]),
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.publication',),
        ),
        migrations.CreateModel(
            name='ArticleVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.publicationversion',),
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.publication',),
        ),
        migrations.CreateModel(
            name='BookVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.publicationversion',),
        ),
        migrations.CreateModel(
            name='ConferencePaper',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.publication',),
        ),
        migrations.CreateModel(
            name='ConferencePaperVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.publicationversion',),
        ),
        migrations.CreateModel(
            name='Deliverable',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.publication',),
        ),
        migrations.CreateModel(
            name='DeliverableVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.publicationversion',),
        ),
        migrations.CreateModel(
            name='Dissertation',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.publication',),
        ),
        migrations.CreateModel(
            name='DissertationVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.publicationversion',),
        ),
        migrations.CreateModel(
            name='Preprint',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.publication',),
        ),
        migrations.CreateModel(
            name='PreprintVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.publicationversion',),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.publication',),
        ),
        migrations.CreateModel(
            name='ProjectVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.publicationversion',),
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.publication',),
        ),
        migrations.CreateModel(
            name='RegistrationVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.publicationversion',),
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.publication',),
        ),
        migrations.CreateModel(
            name='ReportVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.publicationversion',),
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.publication',),
        ),
        migrations.CreateModel(
            name='SectionVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.publicationversion',),
        ),
        migrations.CreateModel(
            name='Thesis',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.publication',),
        ),
        migrations.CreateModel(
            name='ThesisVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.publicationversion',),
        ),
        migrations.CreateModel(
            name='WorkingPaper',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.publication',),
        ),
        migrations.CreateModel(
            name='WorkingPaperVersion',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('share.publicationversion',),
        ),
    ]
