# Taken from https://github.com/CenterForOpenScience/osf.io/pull/6364/files#diff-4e5e90c6228fd48698d074241c2ba760R1
# Install the Docker Client
# - https://www.docker.com/products/docker-desktop

version: '3.4'

volumes:
  postgres_data_vol:
    external: false
  elasticsearch_data_vol:
    external: false
  elastic8_data_vol:
    external: false
  rabbitmq_vol:
    external: false
  share_vol:
    external: false
  share_dist_vol:
    external: false
  share_requirements_vol:
    external: false

services:


  ####################
  # Backend Services #
  ####################

  elasticsearch:
    image: elasticsearch:5.4
    ports:
      - 9203:9200
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data_vol:/usr/share/elasticsearch/data
    stdin_open: true

  elastic8:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.1
    ports:
      - 9208:9200
    volumes:
      - elastic8_data_vol:/usr/share/elasticsearch/data
    environment:
      node.name: one-single-node
      cluster.initial_master_nodes: one-single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"  # raise memory limits a lil bit
      xpack.security.enabled: false  # not good for deployment
    stdin_open: true

  rabbitmq:
    image: rabbitmq:management
    ports:
      - 5673:5672
      - 15673:15672
    volumes:
      - rabbitmq_vol:/var/lib/rabbitmq
    stdin_open: true

  postgres:
    image: postgres:10
    command:
      - /bin/bash
      - -c
      - echo "$$POSTGRES_INITDB" > /docker-entrypoint-initdb.d/commands.sh &&
        chmod +x /docker-entrypoint-initdb.d/commands.sh &&
        /docker-entrypoint.sh postgres
    ports:
      - 5433:5432
    environment:
      POSTGRES_DB: share
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_INITDB: |
        sed -i -e 's/max_connections.*/max_connections = 5000/' /var/lib/postgresql/data/postgresql.conf
        sed -i -e 's/#log_min_duration_statement = .*/log_min_duration_statement = 0/' /var/lib/postgresql/data/postgresql.conf
    volumes:
      - "${POSTGRES_DATA_VOL:-postgres_data_vol}:/var/lib/postgresql/data/"
    stdin_open: true

  ##################
  # SHARE software #
  ##################

  requirements:
    image: quay.io/centerforopenscience/share:develop
    command:
      - /bin/bash
      - -c
      - apt-get update &&
        apt-get install -y gcc &&
        pip install -r requirements.txt -r dev-requirements.txt &&
        (python3 -m compileall /usr/local/lib/python3.11 || true) &&
        rm -Rf /python3.11/* &&
        apt-get remove -y gcc &&
        cp -Rf -p /usr/local/lib/python3.11 / &&
        python3 setup.py develop
    restart: 'no'
    volumes:
      - ./:/code:cached
      - share_requirements_vol:/python3.11

  frontend:
    image: quay.io/centerforopenscience/share-web:develop-local
    command: yarn start
    ports:
      - 4204:4200
    volumes:
      - share_dist_vol:/code/dist
    stdin_open: true

  worker:
    image: quay.io/centerforopenscience/share:develop
    command: /usr/local/bin/celery --app project worker --uid daemon -l INFO
    depends_on:
      - postgres
      - rabbitmq
      - web
      - elasticsearch
      - elastic8
      - indexer
    volumes:
      - ./:/code:cached
      - share_requirements_vol:/usr/local/lib/python3.11
    env_file:
      - .docker-compose.env
    environment:
      ELASTICSEARCH8_SECRET: ${ELASTICSEARCH8_SECRET:-secretsecret}
    stdin_open: true

  web:
    image: quay.io/centerforopenscience/share:develop
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - 8003:8000
    depends_on:
      - postgres
      - rabbitmq
      - elasticsearch
      - elastic8
      - frontend
    volumes:
      - ./:/code:cached
      - share_requirements_vol:/usr/local/lib/python3.11
    env_file:
      - .docker-compose.env
    environment:
      ELASTICSEARCH8_SECRET: ${ELASTICSEARCH8_SECRET:-secretsecret}
    stdin_open: true

  indexer:
    image: quay.io/centerforopenscience/share:develop
    command: sharectl search daemon
    depends_on:
      - postgres
      - rabbitmq
      - elasticsearch
      - elastic8
    volumes:
      - ./:/code:cached
      - share_requirements_vol:/usr/local/lib/python3.11
    env_file:
      - .docker-compose.env
    environment:
      ELASTICSEARCH8_SECRET: ${ELASTICSEARCH8_SECRET:-secretsecret}
    stdin_open: true

