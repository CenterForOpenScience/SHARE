# Taken from https://github.com/CenterForOpenScience/osf.io/pull/6364/files#diff-4e5e90c6228fd48698d074241c2ba760R1
# Install the Docker Client
#
# OSX: https://www.docker.com/products/docker#/mac
# Windows: https://www.docker.com/products/docker#/windows

# Setup the Operation System
#
# OSX
# - Alias the loopback interface
#   sudo ifconfig lo0 alias 192.168.168.167
#
# Windows
# - Install Microsoft Loopback Adapter (Windows 10 follow community comments as the driver was renamed)
#   https://technet.microsoft.com/en-us/library/cc708322(v=ws.10).aspx
# - Rename the new Loopback Interface (typically called 'Ethernet 2')
#   - List interfaces
#     netsh interface show interface
#   - Rename the interface
#     netsh inteface set interface "Ethernet 2" newname="Loopback"
# - Assign the Loopback interface an IP address
#   netsh interface ip add address "Loopback" 192.168.168.167 255.255.255.255
# - Allow Docker to access to Drive your project is stored on
#   Open the Docker Client -> Settings -> Shared Drives -> e.g. C -> Apply

version: '2'
services:
  elasticsearch:
    image: elasticsearch:5.4
    ports:
      - 9200:9200
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"

  rabbitmq:
    image: rabbitmq:management
    ports:
      - 5672:5672
      - 15672:15672

  postgres:
    image: postgres
    command: /bin/bash -c "sed -i -e 's/max_connections.*/max_connections = 5000/' /var/lib/postgresql/data/postgresql.conf || true && sed -i -e 's/#log_min_duration_statement = .*/log_min_duration_statement = 0/' /var/lib/postgresql/data/postgresql.conf || true && /docker-entrypoint.sh postgres"
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: share

  worker:
    build: .
    command: python manage.py celery worker -l DEBUG
    depends_on:
      - postgres
      - rabbitmq
      - web
    links:
      - rabbitmq
      - postgres
      - web
      - elasticsearch
    volumes:
      - ./:/code
    environment:
      DATABASE_HOST: postgres
      BROKER_URL: amqp://guest:guest@rabbitmq:5672/
      SHARE_API_URL: http://web:8000/
      ELASTICSEARCH_URL: http://elasticsearch:9200/

  web:
    build: .
    command: python manage.py runserver --noreload 0.0.0.0:8000
    ports:
      - 8000:8000
    depends_on:
      - postgres
      - rabbitmq
      - elasticsearch
    links:
      - postgres
      - rabbitmq
      - elasticsearch
    volumes:
      - ./:/code
    environment:
      DATABASE_HOST: postgres
      BROKER_URL: amqp://guest:guest@rabbitmq:5672/
      ELASTICSEARCH_URL: http://elasticsearch:9200/
      EMBER_SHARE_URL: http://192.168.168.167:4200
