rdf
---


decide/create rdf-based core metadata application profile
("osf-map"?) allowing for additional future terms/vocabularies

build a formatter that converts from sharev2's normalizeddata to
the given osf-map vocabulary, and serializes with rdflib
=> use that as the new input format for metadata formatters
   (instead of normalizeddata)

replace share.utils.graph.MutableGraph with rdflib.Graph
(or make it use rdflib.Graph internally)
(or use it to write reformatter for existing data, compat layer for existing transformers)

add converter from sharev2_normalizeddata to osf/rdf

update metadata formatters to take osf/rdf graph as input




=======

existing ingest flow:
  share:RawDatum -> [Transform] -> [Regulate] -> share:MutableGraph -> [Format] -> Set<share:FormattedMetadataRecord>

desired ingest flow:
  share:RawDatum -> [Parse] -> rdf:Graph (saved as share:MetadataRecord) -> [Format] -> Set<share:FormattedMetadataRecord>



=======
from sharev2:normalizeddata to rdflib-parsable json-ld
- load json
- give the "central node" a non-blank @id
- add "@context": "https://share.osf.io/vocab/"
